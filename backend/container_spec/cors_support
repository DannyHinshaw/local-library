set $cors '';
if ($http_origin ~* 'https?://(localhost:3000|localhost)') {
        set $cors 'true';
}
# always is required to add headers even if response's status is 4xx or 5xx
if ($cors = 'true') {
        add_header 'Access-Control-Allow-Origin' "$http_origin" always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PATCH, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Mx-ReqToken,X-Request-Signature,X-Requested-With' always;
        # required to be able to read Authorization header in frontend
        add_header 'Access-Control-Expose-Headers' 'Authorization,Total,Per-Page,has_more' always;
        add_header 'Strict-Transport-Security' 'max-age=31536000; includeSubdomains; preload' always;
}

# 2 if are required, nginx treats each if block as a different context
if ($request_method = 'OPTIONS') {
        add_header 'Access-Control-Allow-Origin' "$http_origin" always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PATCH, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Mx-ReqToken,X-Request-Signature,X-Requested-With' always;
        add_header 'Strict-Transport-Security' 'max-age=31536000; includeSubdomains; preload' always;

        return 204;
}
